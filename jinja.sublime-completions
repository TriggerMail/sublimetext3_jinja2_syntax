{
    "scope": "source.jinja, text.html.jinja",

    "completions":
    [
        //control structures
        { "trigger": "block\tjinja block", "contents": "{% block name %}\n{% endblock %}" },
        { "trigger": "extends\tjinja extends", "contents": "{% extends \"filename.html\" %}" },
        { "trigger": "for\tjinja for loop", "contents": "{% for item in list %}\n{% endfor %}" },
        { "trigger": "if\tjinja if", "contents": "{% if condition %}\n{% else %}\n{% endif %}" },
        { "trigger": "include\tjinja include", "contents": "{% include \"filename.html\" %}" },
        { "trigger": "for\tjinja for loop", "contents": "{% for item in list %}\n{% endfor %}" },
        { "trigger": "set\tjinja set", "contents": "{% set variable=value %}" },

        //builtin filters (http://jinja.pocoo.org/docs/dev/templates/#list-of-builtin-filters)
        { "trigger": "|abs\tjinja filter: absolute value", "contents": "abs" },
        { "trigger": "|attr\tjinja filter: get attribute of object", "contents": "attr('attribute')" },
        { "trigger": "|capitalize\tjinja filter: first letter uppercase, others lower", "contents": "capitalize" },
        { "trigger": "|default\tjinja filter: if the value is undefined return default value", "contents": "default('default value')" },
        { "trigger": "|dictsort\tjinja filter: sort dict", "contents": "dictsort(case_sensitive=False, by='key')" },
        { "trigger": "|escape\tjinja filter: convert special HTML characters to safe characters", "contents": "escape" },
        { "trigger": "|first\tjinja filter: first element in sequence", "contents": "first" },
        { "trigger": "|float\tjinja filter: convert to float", "contents": "float" },
        { "trigger": "|format\tjinja filter: apply python string formatting", "contents": "format" },
        { "trigger": "|groupby\tjinja filter: group sequence by attribute", "contents": "groupby('attribute')" },
        { "trigger": "|int\tjinja filter: convert to int", "contents": "int" },
        { "trigger": "|join\tjinja filter: join sequence into string", "contents": "join(' ')" },
        { "trigger": "|last\tjinja filter: last item in sequence", "contents": "last" },
        { "trigger": "|length\tjinja filter: number of items in list", "contents": "length" },
        { "trigger": "|lower\tjinja filter: convert string to lowercase", "contents": "lower" },
        { "trigger": "|pprint\tjinja filter: pretty print variable", "contents": "pprint" },
        { "trigger": "|random\tjinja filter: random item from sequence", "contents": "random" },
        { "trigger": "|replace\tjinja filter: replace substring", "contents": "replace('replace_me', 'with_me')" },
        { "trigger": "|reverse\tjinja filter: reverse object", "contents": "reverse" },
        { "trigger": "|round\tjinja filter: round the number", "contents": "round" },
        { "trigger": "|title\tjinja filter: convert to title case, all starting letter are uppercase", "contents": "title" },
        { "trigger": "|trim\tjinja filter: strip leadind and trailing whitespace", "contents": "trim" },
        { "trigger": "|truncate\tjinja filter: truncate string", "contents": "truncate(255, killwords=False,'...')" },
        { "trigger": "|upper\tjinja filter: convert string to uppercase", "contents": "upper" },
    ]
}